source /home/solus/.config/ranger/shortcuts.conf

set show_hidden true

set line_numbers relative
#set colorscheme unix
#
#vsc aware for certain path
setlocal path=/home/solus/Documents/Learn/Projects/ vcs_aware true

map w shell $SHELL
map Ã± console

# walpapers
map bw shell wal -i %s
map bb shell -w changeWallpaperKeepBorders %s

# ===================================================================
# == Leader
# ===================================================================
map ,g console grep%space
map ,a bulkrename

# s: smart case, f: filter as you type, r: regex search, a: open file after match, k: keep the console open after changing folder
map ,f console scout -sfrak%space

#upload file
map ,u shell -w uploadFile %s

map - console search%space

#convert to pdf
# map ,z shell echo "zip name: "; read -r message; zip -r $message %s
# map ,z shell zipRanger %s

# chain  for multiple commands !
alias compress shell echo "zip name: ";read -r message;if [[ -z "$message" ]]; then if [[ "$#" == 1 ]]; then message="$1.zip"; else message="files.zip" fi;fi; zip -r "$message" %s
map ,z chain compress; mark_files all=True val=False

#convert to pdf
map ,dd shell doc2pdf %s
map ,da shell doc2pdfAPI %s

#see permissions
map Md linemode devicons
# ===================================================================

map ll display_file
map lt console touch%space
map lv console edit%space
map lf console mkdir%space
map lch shell sudo chmod +x %s
# map fo  console find%space
map f fzf_select
map yi YankContent
map yc shell cat %p | xclip -sel clip

# auto
map ln shell npm start 2>/dev/null
map le shell python3 -m venv env 2>/dev/null
map lri shell pip3 install -r requirements.txt 2>/dev/null

#git
map lgi shell git init
map lggc shell git clone --depth=1 $(xclip -out -selection clipboard)
map lgst shell -w clear; git status
map lgaa shell git add %s
map lgau shell git add -U
map lgc shell echo "message: "; read -r message; git commit -m $message
map lggp shell git push origin HEAD
map lglg shell -w clear; git log
map lgr shell echo "remote-url: "; read -r message; git remote add origin $message


#git special
#
alias dst shell -w clear; git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME status
alias daa shell git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME add %s
alias dau shell git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME add -u
alias dlg shell -w git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME log --oneline
alias dc shell echo "message: "; read -r message; git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME commit -m $message
alias dgp shell  git --git-dir=$HOME/Documents/DotFilesRepository/ --work-tree=$HOME push origin HEAD


map ldaa chain daa; mark_files all=True val=False
map ldau dau
map ldst dst
map ldc  dc
map ldlg  dlg
map ldgp dgp


#curl
alias curl shell doCurl
map lcc curl

# delete
# shell [-flags]
# flags are:
#  f   Fork the process, i.e. run in background. Please use this flag
# instead of calling "disown" or "nohup", to avoid killing the
# background command when pressing Ctrl+C in ranger.
# c   Run the current file only, instead of the selection
# r   Run application with root privilege (requires sudo)
# t   Run application in a new terminal window
# There are some additional flags that can currently be used only in the "shell" command:
# (for example ":shell -w df")
# p   Redirect output to the pager
# s   Silent mode.  Output will be discarded.
# w   Wait for an Enter-press when the process is done

map dD shell -s mv -v %s ~/.local/share/Trash/files
map Ddy shell rm -rf -i  %s
map dts shell rm -rf %s

#Mapping -a drags all files at once, -x ; it closes after the drag
# -t to drag something to it
#normal
map dr shell dragon -a -x  %s
#stays
map ds shell dragon -a  %s
#individual
map di shell dragon  %s
# uses scripts
map dm shell mvdragon
map dc shell cpdragon
map dl shell dldragon

#set use_preview_script true
set preview_images_method ueberzug
set preview_images true

copymap <UP>       e
copymap <DOWN>     n
copymap <LEFT>     h
copymap <RIGHT>    i
map k  search_next
map K  search_next forward=False
map H  history_go -1
map I  history_go 1
map L  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)
#Downloading
map ytv console shell youtube-dl -ic%space
map yta console shell youtube-dl -xic%space

# sort folders local, because only one folder
#setlocal path=~/Screenshots sort mtime
#setlocal path=~/Screenshots sort_reverse False

# default sort
set sort ctime
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

#added online
set column_ratios 1,3,4

#set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$
# lineas
set draw_borders false
set hidden_filter ^\.|\.(?:pyc|vrb|pyo|lof|bak|swp|aux|log|nav|out|snm|toc|bcf|run\.xml|synctex\.gz|blg|bbl)$|^lost\+found$|^__(py)?cache__$
set confirm_on_delete multiple
set automatically_count_files true
set open_all_images true
# for version control awareness (like git)
set vcs_aware false
set vcs_backend_git enabled
set vcs_backend_bzr disabled
set vcs_backend_hg disabled
set unicode_ellipsis false
set show_hidden_bookmarks false
set colorscheme default
set preview_files true
set preview_directories true
set collapse_preview true
set save_console_history false
set status_bar_on_top false
set draw_progress_bar_in_status_bar true
set dirname_in_tabs true
set mouse_enabled true
set display_size_in_main_column true
set display_size_in_status_bar true
set display_tags_in_all_columns true
set update_title false
set update_tmux_title true
set shorten_title 3
set tilde_in_titlebar true
set max_history_size 20
set max_console_history_size 50
set scroll_offset 8
set flushinput true
set padding_right true
set autosave_bookmarks false
set autoupdate_cumulative_size false
set show_cursor false
set xterm_alt_key false
set cd_bookmarks false
set preview_max_size 0
set show_selection_in_titlebar true
set idle_delay 2000
set metadata_deep_search false


# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Changing priority and deleting tasks
tmap N          eval -q fm.ui.taskview.task_move(-1)
tmap E          eval -q fm.ui.taskview.task_move(0)
default_linemode devicons

# Tabs
#
map <F1>     tab_open 1
map <F2>     tab_open 2
map <F3>     tab_open 3
map <F4>     tab_open 4
map <F5>     tab_open 5
map <F6>     tab_open 6
map <F7>     tab_open 7
map <F8>     tab_open 8
map <F9>     tab_open 9
