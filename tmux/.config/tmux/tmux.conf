# prefix + :list-keys -T copy-mode-vi
# prefix + h for help


set -g default-terminal "screen-256color"
set-option -gw xterm-keys on
set -s escape-time 0
set -g status-interval 0
# navigate buffer!, use prefix + [

# bind-key a set-window-option synchronize-panes is enough, but the display message helps
bind-key a set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# title
set -g set-titles on
set -g set-titles-string "#S:#I:#T #{session_alerts}"
# set -g set-titles-string "#T"


# statusbar
# set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}],}\"#{b:pane_current_path}\""

set-option -g status-interval 2
set-option -g automatic-rename on
# start in 1
set -g base-index 1
setw -g pane-base-index 1
bind c new-window -c "#{pane_current_path}"

# pane movement with colemak layout
bind h select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R


# Moving Window
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

bind -r k next-window
bind -r K previous-window
bind -r ^ last-window
bind -r o last-window

# resizing
# -r let's the command be repeated
bind -r C-h resize-pane -L 5
bind -r C-n resize-pane -D 5
bind -r C-e resize-pane -U 5
# this uses the c-i code since C-i doesn't work
set -s user-keys[0] "\e[105;5u"
bind -r User0 resize-pane -R 5

bind -r u switch-client -l # in default config is l
bind X confirm-before kill-session


# rather use prefix + (
bind-key -r L run-shell "tmux neww tmux-cht.sh"
bind-key -r l run-shell "tmux neww tmux-web.sh"
bind-key -r G run-shell "tmux-sessionizer $UTILITIES/tmux/nrdp"
bind-key -r W run-shell "tmux-sessionizer $WORK/"
set-option -g display-time 4000

# show cwd ?
# set -g status-left-length 100
# set -g status-left '#[fg=green] #T#[default]'

# copy mode movement
set-window-option -g mode-keys vi
bind -T copy-mode-vi 'n' send-keys -X cursor-down
bind -T copy-mode-vi 'e' send-keys -X cursor-up
bind -T copy-mode-vi 'i' send-keys -X cursor-right

# text object
bind -T copy-mode-vi l switch-client -T text-object
bind -T text-object w if -F '#{selection_present}' { send -X select-word }
bind -T copy-mode-vi v if -F '#{selection_present}' { send -X clear-selection } { send -X begin-selection }
bind -T copy-mode-vi 'j' send-keys -X next-word-end
bind -T copy-mode-vi 'k' send-keys -X search-again
bind -T copy-mode-vi 'y' send-keys -X copy-pipe 'xclip -in -selection clipboard >/dev/null'

# disable status bar
set -g status on
set -g prefix C-a
# for scripts and inner sessions
bind-key -n C-b send-prefix 
unbind C-b
# status bar
# set -g status-bg green
# set -g status-style "bg=default,fg=#665c54,bold"
# set -g status-style "bg=green,fg=black"
set -g status-style "bg=default,fg=#897c70,bold"
# set -g status-fg black
set -g status-justify left
# set -g status-justify centre
set -g status-keys vi
set -g status-left "[#S] "
set -g status-left-style default
set -g status-position bottom
# set -g status-style fg=black,bg=green


# set -g message-style fg=black,bg=yellow
set -g message-command-style fg=yellow,bg=black
set -g message-style "fg=brightwhite"

set -g status-right-length 60
set -g status-left-length 20

# set -g status-right-style "fg=black"
# set -g status-left-style "fg=black"
# set -g status-right-style "fg=brightwhite,bold"
# set -g status-left-style "fg=brightwhite,bold"
# set -g status-right-style "fg=#665c54,bold"
# set -g status-left-style "fg=#665c54,bold"
set -g status-right-style "fg=#897c70,bold"
set -g status-left-style "fg=#897c70,bold"


#-----------------
set -g mouse off # can't select things if on
set -g activity-action other
set -g assume-paste-time 1
set -g bell-action any
set -g default-command "/bin/zsh"
set -g default-size 80x24
set -g destroy-unattached off
set -g detach-on-destroy on
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
set -g display-time 750
set -g history-limit 2000
set -g key-table root
set -g lock-after-time 0
set -g lock-command "lock -np"
set -g renumber-windows off
set -g repeat-time 300
# set -g repeat-time 500 # interval of time for inputting a new command without using prefix again
set -g silence-action other

set -g status-format[0] "#[align=left range=left #{status-left-style}]#[push-default]#{T;=/#{status-left-length}:status-left}#[pop-default]#[norange default]#[list=on align=#{status-justify}]#[list=left-marker]<#[list=right-marker]>#[list=on]#{W:#[range=window|#{window_index} #{window-status-style}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-format}#[pop-default]#[norange default]#{?window_end_flag,,#{window-status-separator}},#[range=window|#{window_index} list=focus #{?#{!=:#{window-status-current-style},default},#{window-status-current-style},#{window-status-style}}#{?#{&&:#{window_last_flag},#{!=:#{window-status-last-style},default}}, #{window-status-last-style},}#{?#{&&:#{window_bell_flag},#{!=:#{window-status-bell-style},default}}, #{window-status-bell-style},#{?#{&&:#{||:#{window_activity_flag},#{window_silence_flag}},#{!=:#{window-status-activity-style},default}}, #{window-status-activity-style},}}]#[push-default]#{T:window-status-current-format}#[pop-default]#[norange list=on default]#{?window_end_flag,,#{window-status-separator}}}#[nolist align=right range=right #{status-right-style}]#[push-default]#{T;=/#{status-right-length}:status-right}#[pop-default]#[norange default]"
set -g status-format[1] "#[align=centre]#{P:#{?pane_active,#[reverse],}#{pane_index}[#{pane_width}x#{pane_height}]#[default] }"
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " "
# set -g pane-active-border-style "bg=default fg=green"
# set -g pane-border-style "bg=default fg=green "
set -g pane-active-border-style "bg=default fg=#897c70"
set -g pane-border-style "bg=default fg=#897c70"

# Fun
unbind C
bind C new-window \; split-window -h \; select-pane -t 2 \; resize-pane -x 40 \; send "cmatrix" Enter \; select-pane -t 1 


# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# install the plugin manager
#git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
# run '~/.config/tmux/plugins/tpm/tpm'

# cool plugins https://www.barbarianmeetscoding.com/blog/jaimes-guide-to-tmux-the-most-awesome-tool-you-didnt-know-you-needed
# https://github.com/tmux-python/tmuxp

#git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
# then do prefix + I
# -b is run in the background
if-shell -b '[ -d ~/.config/tmux/plugins/tpm ]' {
    run '~/.config/tmux/plugins/tpm/tpm'
}
