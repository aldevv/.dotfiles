#!/bin/bash

platform="linux"
is_first=0

while true; do
    case "$1" in
        first) shift; is_first=1;;
        all) shift; platform=".*";;
        *) 
            if [[ -n "$2" ]]; then shift; platform="$1"; fi; break;;
    esac
done

types="(tar.gz|tar.xz|deb|7z|zip|tar.bz2|bz2|rar|gz|tar|tbz2|tgz|Z|tar.zst)"
info=$(echo "$1" | cut -d / -f 4,5)
author=$(echo "$info" | cut -d / -f 1)
repo=$(echo "$info" | cut -d / -f 2)

versions=$(wget -q https://api.github.com/repos/${author}/${repo}/releases/latest -O - |
	awk -F \" -v RS="," '/browser_download_url/ {print $(NF-1)}' |
    grep "$platform" | grep -E "$types")

source_code_tag=$(wget -q https://api.github.com/repos/${author}/${repo}/releases/latest -O - |
	awk -F \" -v RS="," '/tag_name/ {print $(NF-1)}')

if [[ $is_first == 1 ]]; then
    if [[ -z "$versions" ]]; then
        head <<< "$source_code_tag"
    else
        head <<< "$versions"
    fi
    exit 0
fi

if [[ "$versions" != "" || "$source_code_tag" != "" ]]; then
    if [[ -z "$versions" ]]; then
        chosen="$(fzf --no-preview -d / --with-nth -1 <<< "$(echo -e "tag: $source_code_tag.zip\ntag: $source_code_tag.tar.gz" | sed 's/^$//g' )")"
    else
        chosen="$(fzf --no-preview -d / --with-nth -1 <<< "$(echo -e "${versions}\ntag: $source_code_tag.zip\ntag: $source_code_tag.tar.gz" | sed 's/^$//g' )")"
    fi
    echo "$chosen"
    exit 0
fi

echo "$versions"
echo "$source_code_tag"
