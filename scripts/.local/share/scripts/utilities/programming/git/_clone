#!/bin/bash

[[ -z "$1" ]] && return


get_service() {
# returns service name, like github.com

if [[ "$1" == "ssh" ]]; then
    # remove author and repo from link
    service="${link/:$info}"
    # remove git@
    echo "${service##*@}"
fi

if [[ "$1" == "https" ]]; then

    # remove author and repo from link
    service="${link/\/$info}"
    # remove https://
    echo "${service##*/}"
fi
}

link="$1"
if ! grep "@" <<< "$link"; then
    info=$(cut -d / -f 4,5 <<< "$link")
    author=$(cut -d / -f 1 <<< "$info")
    repo=$(cut -d / -f 2 <<< "$info")
    service="$(get_service "https")"
else
    info=$(cut -d : -f 2 <<< "$link")
    author=$(cut -d / -f 1 <<< "$info")
    repo=$(cut -d / -f 2 <<< "$info")
    repo="${repo%.*}"
    service="$(get_service "ssh")"
fi


_path="$REPOS/$service/$author/$repo"
if [[ ! -d "$_path" ]]; then
    mkdir -p "$_path"
else
    echo -e "\e[31m the $author/$repo repo already exists, overwrite? [y,N]\e[0m"
    read -r ans
    if [[ -n "$ans" && "$ans" != "n" && "$ans" != "no" && "$ans" != "N" && "$ans" != "NO" ]]; then
        rm -rf "$_path"
        echo -e "\e[31m Removed old repo\e[0m"
    else
        cd "$_path" || return 
        return
    fi
fi

if [[ "$(pwd)" == "$_path" ]]; then
    cd || return
fi

git clone --depth 1 --recursive "$link" "$_path"

cd "$_path" || return
