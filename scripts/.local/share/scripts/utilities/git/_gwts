#!/bin/bash

# this can be much easier using git worktree list --porcelain

_options="$(git worktree list)"
[[ -z "$_options" ]] && return 1

# this section sorts the worktree by committerdate
sorted="$(git branch --sort=-committerdate | grep '^[+*]' | awk '{print $2}')"
sorted_options=""
while read -r l; do
    if [[ -z "$sorted_options" ]]; then
        sorted_options="$(grep "$l" <<<"$_options")"
    else
        sorted_options="$sorted_options\n$(grep "$l" <<<"$_options")"
    fi
done <<<"$sorted"

# detached heads handler, since we are searching using branch and worktree
# we append detached heads to the end
while read -r l; do
    worktree_path="$(awk '{print $1}' <<<"$l")"
    commit="$(awk '{print $2}' <<<"$l")"
    if [[ "$commit" == "(bare)" ]]; then
        continue
    fi

    if ! grep -zoP "$worktree_path" <<<"$sorted_options" &>/dev/null; then
        sorted_options="$sorted_options\n$l"
    fi
done <<<"$_options"
_options="$(echo "$sorted_options" | awk '{print $1}')"

_path="$(fzf -d / --with-nth -3,-2,-1 --preview="source $UTILITIES/programming/git/logWorktree &>/dev/null; logWorktree {}" --preview-window="70%:wrap" <<<"$_options")"
[ -z "$_path" ] && return
cd "$_path" || return
