#!/usr/bin/env bash

declare -A types=(["work"]="$WORK" ["project"]="$PROJECTS" ["code"]="$PLAYGROUND/code"  ["learn"]="$LEARN")

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # the -not -path is to ignore hidden folders 
    selected=$(find -L $WORK $PROJECTS $PLAYGROUND/code $LEARN -mindepth 1 -maxdepth 1 -not -path '*/\.*' -type d | fzf --preview="ls {} --color=always" --delimiter / --with-nth -2,-1 --preview-window=60%:wrap)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)
for key in "${!types[@]}"; do
    if grep -o "/$key/" <<< "$selected"; then
        prefix="${key:0:1}"
    fi
    prefix=${key:0:1}
done
# TODO: generalize this script so this func can be used in other scripts

if [[ -z $TMUX ]] &&  tmux has-session -t "$prefix-$selected_name" ; then
    # attach to session if it exists
    tmux attach -t "$prefix-$selected_name"
fi

# change it so it checks if current directory inside tmux session
# is a child of $selected session
if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    # no tmux running start and create session
    echo "no tmux running"
    tmux -f ~/.config/tmux/tmux.conf new-session -s "$prefix-$selected_name" -c "$selected"
    exit 0
fi

if ! tmux has-session -t "$prefix-$selected_name" 2> /dev/null; then
    # tmux running but no session with this name, create it
    echo "second"
    tmux -f ~/.config/tmux/tmux.conf new-session -ds "$prefix-$selected_name" -c "$selected"
fi
#
if ! tmux switch-client -t "$prefix-$selected_name" 2> /dev/null; then
    # switch to correct session, if can't switch, then attach
    echo "third"
    tmux attach -t "$prefix-$selected_name"
fi
